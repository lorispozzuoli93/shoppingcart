{"version":3,"sources":["Products/ProductsList.tsx","Products/ProductForm.tsx","store.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialProducts","title","price","id","ProductsList","useState","products","setProducts","map","product","onClick","prevProducts","ProductForm","type","placeholder","name","store","configureStore","reducer","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAIMA,EAAkB,CACtB,CAAEC,MAAO,qBAAsBC,MAAO,GAAIC,GAAI,OAC9C,CAAEF,MAAO,iBAAkBC,MAAO,GAAIC,GAAI,QAC1C,CAAEF,MAAO,iBAAkBC,MAAO,GAAIC,GAAI,QAoC7BC,EA5BmC,SAAC,GAAQ,eACzD,MAAgCC,mBAAoBL,GAApD,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,OACE,gCACE,4CACCD,EAASE,KAAI,SAACC,GAAD,OACZ,8BACE,yCAAUA,EAAQR,MAAlB,cAA6BQ,EAAQP,UAD7BO,EAAQN,OAIpB,wBACEO,QAAS,kBACPH,GAAY,SAACI,GAAD,OACV,CACEV,MAAO,YACPC,MAAO,IACPC,GAAI,OAJI,mBAMPQ,QART,6BCPSC,EAdiC,SAAC,GAC/C,OADuD,eAErD,qCACE,uDACA,iCACE,uBAAOC,KAAK,OAAOC,YAAY,aAAaC,KAAK,UACjD,uBAAOF,KAAK,SAASC,YAAY,QAAQC,KAAK,UAC9C,uBAAOF,KAAK,OAAOC,YAAY,KAAKC,KAAK,OACzC,sD,eCJOC,EANDC,YAAe,CAC3BC,QAAS,KCcIC,MAXf,WACE,OACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACA,sBAAKI,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCGSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.005bb4cf.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\ninterface ProductsListProps {}\r\n\r\nconst initialProducts = [\r\n  { title: \"Escape From Tarkov\", price: 60, id: \"eft\" },\r\n  { title: \"Hunt: Showdown\", price: 70, id: \"hunt\" },\r\n  { title: \"Hell Let Loose\", price: 55, id: \"hll\" },\r\n];\r\n\r\ninterface Product {\r\n  title: string;\r\n  price: number;\r\n  id: string;\r\n}\r\nconst ProductsList: React.FC<ProductsListProps> = ({}) => {\r\n  const [products, setProducts] = useState<Product[]>(initialProducts);\r\n  return (\r\n    <div>\r\n      <h2>Games list</h2>\r\n      {products.map((product) => (\r\n        <div key={product.id}>\r\n          <span>{`${product.title} : ${product.price}`}</span>\r\n        </div>\r\n      ))}\r\n      <button\r\n        onClick={() =>\r\n          setProducts((prevProducts) => [\r\n            {\r\n              title: \"Half Life\",\r\n              price: 100,\r\n              id: \"h1\",\r\n            },\r\n            ...prevProducts,\r\n          ])\r\n        }\r\n      >\r\n        Add Product\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsList;\r\n","import React from \"react\";\r\n\r\ninterface ProductFormProps {}\r\n\r\nconst ProductForm: React.FC<ProductFormProps> = ({}) => {\r\n  return (\r\n    <>\r\n      <h2>Add game To The Store</h2>\r\n      <form>\r\n        <input type=\"text\" placeholder=\"Game title\" name=\"title\" />\r\n        <input type=\"number\" placeholder=\"Price\" name=\"price\" />\r\n        <input type=\"text\" placeholder=\"Id\" name=\"id\" />\r\n        <button>Add price</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n      \r\n  },\r\n});\r\n\r\nexport default store;\r\n","import \"./App.css\";\nimport ProductsList from \"./Products/ProductsList\";\nimport ProductForm from \"./Products/ProductForm\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <ProductsList />\n      <ProductForm />\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}